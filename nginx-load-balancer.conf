# Nginx负载均衡配置

# 定义上游服务器组
upstream construction_app {
    # 启用IP哈希负载均衡，确保来自同一IP的请求总是发送到同一服务器
    # 适用于需要会话一致性的应用
    ip_hash;
    
    # 应用服务器实例列表 - 需根据实际部署情况修改
    server 127.0.0.1:3000 weight=5;
    server 127.0.0.1:3001 weight=5;
    server 127.0.0.1:3002 weight=5;
    server 127.0.0.1:3003 backup;  # 备用服务器，仅在其他服务器不可用时使用
    
    # 健康检查 - Nginx Plus功能，使用开源Nginx需要其他解决方案
    # health_check interval=5s fails=3 passes=2;
    
    # 保持活动连接数
    keepalive 16;
}

# 配置HTTPS服务器
server {
    listen 443 ssl http2;
    server_name construction.example.com;  # 替换为实际域名
    
    # SSL配置
    ssl_certificate     /etc/nginx/ssl/construction.crt;  # 替换为实际证书路径
    ssl_certificate_key /etc/nginx/ssl/construction.key;  # 替换为实际私钥路径
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    
    # 启用HSTS
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
    
    # 安全相关的头信息
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 日志配置
    access_log /var/log/nginx/construction_access.log;
    error_log  /var/log/nginx/construction_error.log;
    
    # 静态文件缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # API请求
    location /api/ {
        proxy_pass http://construction_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 设置超时
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://construction_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # 限制仅允许内部网络访问健康检查
        # allow 10.0.0.0/8;
        # allow 172.16.0.0/12;
        # allow 192.168.0.0/16;
        # deny all;
    }
    
    # 所有其他请求
    location / {
        proxy_pass http://construction_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTP重定向到HTTPS
server {
    listen 80;
    server_name construction.example.com;  # 替换为实际域名
    
    # 重定向所有HTTP请求到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
} 